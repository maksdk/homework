"use strict";var _createClass=function(){function e(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(t,r,o){return r&&e(t.prototype,r),o&&e(t,o),t}}();function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var CreateBoard=function(){function e(){_classCallCheck(this,e),this.parent,this.element}return _createClass(e,[{key:"findParent",value:function(e){this.parent=document.querySelector("."+e)}},{key:"createElement",value:function(e){this.element=document.createElementNS("http://www.w3.org/2000/svg",e),this.parent.appendChild(this.element)}},{key:"setAttributesSvg",value:function(e,t,r,o,i,n){this.findParent(t),this.createElement("svg"),this.element.setAttribute("height",o),this.element.setAttribute("width",r),this.element.setAttribute("x",i||0),this.element.setAttribute("y",n||0),this.element.classList.add(e)}},{key:"setAttributesRect",value:function(e,t,r,o,i,n,s,a,l){this.findParent(t),this.createElement("rect"),this.element.setAttribute("height",o),this.element.setAttribute("width",r),this.element.setAttribute("x",i||0),this.element.setAttribute("y",n||0),this.element.setAttribute("fill",s||"none"),this.element.setAttribute("stroke",a||"none"),this.element.setAttribute("stroke-width",l||0),this.element.classList.add(e)}},{key:"setAttributesText",value:function(e,t,r,o,i,n){this.findParent(t),this.createElement("text"),this.element.setAttribute("x",r),this.element.setAttribute("y",o),this.element.setAttribute("font-family","Verdana"),this.element.setAttribute("font-size",n||"14"),this.element.setAttribute("fill","#85653E"),this.element.innerHTML=i,this.element.classList.add(e)}},{key:"setAttributesCircle",value:function(e,t,r,o,i,n,s,a){this.findParent(t),this.createElement("circle"),this.element.setAttribute("cx",r),this.element.setAttribute("cy",o),this.element.setAttribute("r",i),this.element.setAttribute("fill",n),this.element.setAttribute("stroke",s),this.element.setAttribute("stroke-width","2"),this.element.classList.add(e,"slowMove"),this.element.addEventListener("click",clickCircle,!1)}},{key:"setAttributesPolyline",value:function(e,t,r,o,i){this.findParent(t),this.createElement("polyline"),this.element.setAttribute("points",r),this.element.setAttribute("stroke",o),this.element.setAttribute("stroke-width","3"),this.element.setAttribute("fill",i||"none"),this.element.setAttribute("fill-opacity",".5"),this.element.classList.add(e)}},{key:"setAttributesG",value:function(e){var t;this.findParent(e),this.createElement("g");for(var r=arguments.length,o=Array(r>1?r-1:0),i=1;i<r;i++)o[i-1]=arguments[i];(t=this.element.classList).add.apply(t,o)}}]),e}(),size=Math.floor(.8*document.documentElement.clientHeight/8);size%2?size++:size=size;var wrapper=document.querySelector(".wrapper"),create=new CreateBoard;create.setAttributesSvg("outerBoard","wrapper",11*size,9*size),create.setAttributesSvg("outerBoard__board","outerBoard",10*size,9*size,size,0),create.setAttributesRect("outerBoard__board--border","outerBoard__board",9*size,9*size,0,0,"#EDCFA9","#85653E",3),create.setAttributesRect("outerBoard__board--fill","outerBoard__board",8*size+4,8*size+5,.5*size-2,.5*size-2," #85653E"),create.setAttributesSvg("outerBoard__board__innerBoard","outerBoard__board",9.5*size,8*size,.5*size,.5*size+1);_createClass=function(){function e(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(t,r,o){return r&&e(t.prototype,r),o&&e(t,o),t}}();function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var CreateBoardElements=function(e){function t(){return _classCallCheck(this,t),_possibleConstructorReturn(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return _inherits(t,CreateBoard),_createClass(t,[{key:"createRects",value:function(){for(var e=void 0,t=0,r=0,o=0;o<8;o++){for(var i=0;i<8;i++)e=(o+i)%2?"#85653E":"#EDCFA9",this.setAttributesRect("outerBoard__board__innerBoard--rect","outerBoard__board__innerBoard",size,size,t,r,e),t+=size;t=0,r+=size}}},{key:"createCircles",value:function(){for(var e=1.5*size,t=size/2,r="#565455",o="#3C3B3B",i="black",n="outerBoard__board__innerBoard",s=0;s<6;s++){for(var a=0;a<4;a++)this.setAttributesCircle(i,n,e,t,size/3,r,o),this.setAttributesCircle(i,n,e,t,size/5,r,o),e+=2*size;2==s?(t=5.5*size,e=size/2,r="#D4E2CB",o="#F8FFEE",i="white"):s%2?(t+=size,e=1.5*size):(t+=size,e=size/2)}}},{key:"createBoardCoords",value:function(){var e=this,t=["a","b","c","d","e","f","g","h"];[1,2,3,4,5,6,7,8].forEach(function(r,o){var i=r,n="outerBoard__board",s="outerBoard__board--coords";e.setAttributesText(s,n,size/5-2,size*i+6,""+r),e.setAttributesText(s,n,8.7*size-2,size*i+6,""+r),e.setAttributesText(s,n,size*i-6,size/3,""+t[o]),e.setAttributesText(s,n,size*i-6,8.8*size+2,""+t[o])})}},{key:"createArrow",value:function(){var e="1,"+4.2*size+" "+.7*size+","+4.2*size+" "+.85*size+","+4.5*size+" "+.7*size+","+4.8*size+" 1,"+4.8*size+" 1,"+4.2*size;this.setAttributesG("outerBoard","slowMove","parentArrow","displayNone"),this.setAttributesPolyline("arrow","parentArrow",e,"#B04632","#B04632"),this.setAttributesText("arrow__text1","parentArrow",8,4.45*size,"white","12"),this.setAttributesText("arrow__text2","parentArrow",8,4.7*size,"move","12")}},{key:"createContainerRoute",value:function(){this.setAttributesG("outerBoard__board__innerBoard","routeParent")}},{key:"createContainerActiveRect",value:function(){this.setAttributesG("outerBoard__board__innerBoard","activeRectParent")}},{key:"createContainerHigherZindex",value:function(){this.setAttributesG("outerBoard__board__innerBoard","higherZindex")}}]),t}(),elementsBoard=new CreateBoardElements;elementsBoard.createBoardCoords(),elementsBoard.createRects(),elementsBoard.createCircles(),elementsBoard.createArrow(),elementsBoard.createContainerRoute(),elementsBoard.createContainerActiveRect(),elementsBoard.createContainerHigherZindex();_createClass=function(){function e(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(t,r,o){return r&&e(t.prototype,r),o&&e(t,o),t}}();function _toConsumableArray(e){if(Array.isArray(e)){for(var t=0,r=Array(e.length);t<e.length;t++)r[t]=e[t];return r}return Array.from(e)}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var Game=function(){function e(){_classCallCheck(this,e)}return _createClass(e,[{key:"removeElement",value:function(e){var t=document.querySelectorAll("."+e);[].concat(_toConsumableArray(t)).forEach(function(e){e.parentNode.removeChild(e)})}},{key:"removeClass",value:function(e){var t=document.querySelectorAll("."+e);[].concat(_toConsumableArray(t)).forEach(function(t){t.classList.remove(e)})}},{key:"addClassLastMoved",value:function(e){var t=document.getElementsByClassName(""+e);[].concat(_toConsumableArray(t)).forEach(function(e){e.classList.add("lastMoved")})}},{key:"addClassActive",value:function(e,t,r){var o=document.getElementsByClassName(""+r);[].concat(_toConsumableArray(o)).forEach(function(r){var o=r.getAttribute("cx"),i=r.getAttribute("cy");o==e&&i==t&&r.classList.add("active")})}},{key:"addHigherZindex",value:function(){var e=document.querySelector(".higherZindex"),t=document.querySelectorAll(".active");[].concat(_toConsumableArray(t)).forEach(function(t){var r=t.cloneNode(!0);r.classList.add("higherZindex--circle"),e.appendChild(r)})}},{key:"createQueen",value:function(){var e=document.querySelectorAll(".active");[].concat(_toConsumableArray(e)).forEach(function(e){+e.getAttribute("r")==size/5?e.parentNode.removeChild(e):e.classList.add("queen")})}},{key:"createCloneDeletedCircle",value:function(e,t){var r=document.querySelector(".outerBoard__board__innerBoard"),o=t.cloneNode(!0);o.classList.add("cloneDelete"+e),r.appendChild(o)}},{key:"moveArrow",value:function(e){var t=document.querySelector(".parentArrow"),r=document.querySelector(".arrow__text1"),o=document.querySelector(".arrow__text2");"white"==e?t.setAttribute("style","transform: translate(0, "+2*size+"px)"):t.setAttribute("style","transform: translate(0, -"+2*size+"px)"),t.classList.remove("displayNone"),t.classList.remove("displayNone"),r.setAttribute("fill",""+e),o.setAttribute("fill",""+e),r.innerHTML=e}},{key:"gameOver",value:function(){var e=element.color[0].toUpperCase()+element.color.slice(1);document.querySelector(".popup__content--text").innerHTML=e+" won!",document.querySelector(".popup__content--btn").addEventListener("click",function(e){window.location.reload()},!1),document.querySelector(".popup").classList.remove("displayNone")}}]),e}(),element={specialMove:[],specialRemove:[],simpleMove:[]};function clickCircle(e){if(!this.classList.contains("lastMoved")){element.elem=this,element.color=this.classList.contains("white")?"white":"black";var t=this.getAttribute("cx"),r=this.getAttribute("cy"),o=!!this.classList.contains("queen"),i=new Game;i.removeElement("activeRect"),i.removeElement("route__polyline"),i.removeElement("routeCircle"),i.removeElement("higherZindex--circle"),i.removeClass("delete"),i.removeClass("active"),i.moveArrow(element.color),i.addClassActive(t,r,element.color),i.addHigherZindex(),searchMove(t,r,element.color,o)}}_createClass=function(){function e(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(t,r,o){return r&&e(t.prototype,r),o&&e(t,o),t}}();function _toConsumableArray(e){if(Array.isArray(e)){for(var t=0,r=Array(e.length);t<e.length;t++)r[t]=e[t];return r}return Array.from(e)}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var MoveChecker=function(e){function t(e){_classCallCheck(this,t);var r=_possibleConstructorReturn(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));return r.x_end=e.getAttribute("x"),r.y_end=e.getAttribute("y"),r.cx_end=+r.x_end+size/2,r.cy_end=+r.y_end+size/2,r.activeCircle=document.querySelectorAll(".active"),r.colorDelete="white"==element.color?"black":"white",r.index=0,r.route,r.deleteCircles,r.endGame,r.scale,r.cy_deleted,r}return _inherits(t,Game),_createClass(t,[{key:"setFinalRoute",value:function(){var e=this,t=element.coordsMove.filter(function(t){for(var r=t.length-1;r>=0;r--)if(t[r].cx==e.cx_end&&t[r].cy==e.cy_end)return t});return this.route=t[0],this.route.splice(0,1),this.route}},{key:"startMove",value:function(){var e=this,t=this.route[this.index].flag,r=this.route[this.index].cx,o=this.route[this.index].cy,i=!this.stopMove(),n=this;"move"===t||"simpleMove"===t?(this.move(r,o),this.checkQueen(o)):"delete"===t&&(this.getdeleteCircles(),this.getScale(),this.endGame=22==this.scale,this.getCyDeletedCircle(),this.deleteCircles.forEach(function(t){var i=t.getAttribute("cx"),s=t.getAttribute("cy");if(r==i&&o==s){t.classList.remove(""+e.colorDelete);var a=e.colorDelete;setTimeout(function(){n.createCloneDeletedCircle(a,t)},600),setTimeout(function(){n.deleteElem(t)},350),e.endGame&&setTimeout(function(){n.gameOver()},900)}})),++this.index<this.route.length&&i?setTimeout(function(){n.startMove()},180):(this.removeElement("activeRect"),this.removeElement("route__polyline"),this.removeElement("routeCircle"),this.removeClass("delete"),this.removeClass("active"),this.removeClass("lastMoved"),this.addClassLastMoved(element.color),this.moveArrow(this.colorDelete))}},{key:"move",value:function(e,t){[].concat(_toConsumableArray(this.activeCircle)).forEach(function(r){r.setAttribute("cx",e),r.setAttribute("cy",t)})}},{key:"deleteElem",value:function(e){e.setAttribute("cx",9*size),e.setAttribute("cy",this.cy_delete)}},{key:"checkQueen",value:function(e){(e==size/2&&"white"===element.color||e==7.5*size&&"black"===element.color)&&this.createQueen()}},{key:"getdeleteCircles",value:function(){this.deleteCircles=[].concat(_toConsumableArray(document.querySelectorAll(".delete")))}},{key:"getScale",value:function(){this.scale=24-document.querySelectorAll("."+this.colorDelete).length,this.scale%2&&--this.scale}},{key:"getCyDeletedCircle",value:function(){"black"===this.colorDelete?this.cy_delete=7.5*size-size/5*this.scale/2:this.cy_delete=size/2+size/5*this.scale/2}},{key:"stopMove",value:function(){return this.route[this.index].cx==this.cx_end&&this.route[this.index].cy==this.cy_end}}]),t}();function clickRect(e){var t=new MoveChecker(this);t.setFinalRoute(),t.startMove()}var _slicedToArray=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var r=[],o=!0,i=!1,n=void 0;try{for(var s,a=e[Symbol.iterator]();!(o=(s=a.next()).done)&&(r.push(s.value),!t||r.length!==t);o=!0);}catch(e){i=!0,n=e}finally{try{!o&&a.return&&a.return()}finally{if(i)throw n}}return r}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")};_createClass=function(){function e(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(t,r,o){return r&&e(t.prototype,r),o&&e(t,o),t}}();function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var DrawRoute=function(e){function t(e,r,o,i){_classCallCheck(this,t);var n=_possibleConstructorReturn(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));return n.simpleMoveCoords=[],n}return _inherits(t,CreateBoard),_createClass(t,[{key:"drawRouteCircles",value:function(e,t,r,o,i){this.setAttributesCircle("routeCircle","routeParent",e,t,size/7,r,o,1),this.element.classList.remove("slowMove"),this.element.removeEventListener("click",clickCircle,!1)}},{key:"drawRoutePolylines",value:function(e,t){this.setAttributesPolyline("route__polyline","routeParent",e,t)}},{key:"drawRouteRect",value:function(e,t,r){this.setAttributesRect("activeRect","activeRectParent",size,size,e,t,"#B04632",r,3),this.element.addEventListener("click",clickRect,!1)}},{key:"findAndSortCoords",value:function(e,t,r,o){var i=this;["topLeft","topRigth","lowLeft","lowRigth"].forEach(function(n){var s=findCoords(e,t,r,n,o,!0),a=_slicedToArray(s,3),l=a[0],c=a[1],u=a[2];element.specialRemove.length&&(c=element.specialRemove,l=element.specialMove,element.specialRemove=[],element.specialMove=[]),c.length?sortCoords(c,l,0,0,0):u.length&&i.simpleMoveCoords.push(u)})}},{key:"setSimpleMoveCoords",value:function(){element.coordsMove.length||this.simpleMoveCoords.forEach(function(e){element.coordsMove.push(e)})}},{key:"drawElementsRoute",value:function(){var e=this,t=element.elem.getAttribute("stroke");element.coordsMove.forEach(function(r){var o=[];r.forEach(function(r){o.push(r.cx+","+r.cy),"move"==r.flag&&e.drawRouteCircles(r.cx,r.cy,t,t)});var i=o.join(" ");e.drawRoutePolylines(i,t);for(var n=r.length-1;n>0&&"delete"!==r[n].flag;n--){var s=r[n].cx-size/2,a=r[n].cy-size/2;e.drawRouteRect(s,a,t)}})}}]),t}();function searchMove(e,t,r,o){element.coordsMove=[];var i=new DrawRoute;i.findAndSortCoords(e,t,r,o),i.setSimpleMoveCoords(),i.drawElementsRoute()}_slicedToArray=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var r=[],o=!0,i=!1,n=void 0;try{for(var s,a=e[Symbol.iterator]();!(o=(s=a.next()).done)&&(r.push(s.value),!t||r.length!==t);o=!0);}catch(e){i=!0,n=e}finally{try{!o&&a.return&&a.return()}finally{if(i)throw n}}return r}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")};function _toConsumableArray(e){if(Array.isArray(e)){for(var t=0,r=Array(e.length);t<e.length;t++)r[t]=e[t];return r}return Array.from(e)}function findCoords(e,t,r,o,i,n,s,a,l,c){null==a&&(s=[],l=[],pushCoordsInArr(+e,+t,"move",a=[]));var u=setCoords(e,t,o),h=_slicedToArray(u,5),f=h[0],d=h[1],v=h[2],m=h[3],y=h[4],b=findNextElem(f,d);if("free"==b&&(i||r==y)&&null==c)l.length||pushCoordsInArr(+e,+t,"startMove",l),pushCoordsInArr(f,d,"simpleMove",l),i&&findCoords(f,d,r,o,i,null,s,a,l,c);else if("black"==b&&"white"==r||"white"==b&&"black"==r){var p=setCoords(f,d,o),C=_slicedToArray(p,2),_=findNextElem(C[0],C[1]),A=searchSimilarDelete(f,d,s);if("free"==_&&!A){var g=specialCheckRemove(s,f,d);if(g){var w=specialSortRemove(s,a,f,d),z=_slicedToArray(w,2);s=z[0],a=z[1]}pushCoordsInArr(f,d,"delete",s),addClassDelete(f,d),findCoords(f,d,r,o,i,null,s,a,l,c=!0),g&&(element.specialMove=a,element.specialRemove=s)}}else if("free"==b&&null!=c){pushCoordsInArr(f,d,"move",a);var k=setCoords(f,d,o),x=_slicedToArray(k,2),E=findNextElem(x[0],x[1]);d!=size/2&&d!=7.5*size||(i=!0),("free"!=E||i)&&findCoords(f,d,r,o,i,null,s,a,l,c),findCoords(f,d,r,v,i,null,s,a,l),findCoords(f,d,r,m,i,null,s,a,l)}return[a,s,l]}function setCoords(e,t,r){var o=void 0,i=void 0,n=void 0;return"topLeft"===r?(e=Math.floor(+e-size),t=Math.floor(+t-size),o="topRigth",i="lowLeft",n="white"):"topRigth"===r?(e=Math.floor(+e+size),t=Math.floor(+t-size),o="topLeft",i="lowRigth",n="white"):"lowLeft"===r?(e=Math.floor(+e-size),t=Math.floor(+t+size),o="topLeft",i="lowRigth",n="black"):"lowRigth"===r&&(e=Math.floor(+e+size),t=Math.floor(+t+size),o="topRigth",i="lowLeft",n="black"),[e,t,o,i,n]}function pushCoordsInArr(e,t,r,o){var i={cx:e,cy:t,flag:r};return o.push(i),o}function findNextElem(e,t){if(!validCoord(e,t))return!1;var r="free",o=[].concat(_toConsumableArray(document.querySelectorAll("circle")));e:for(var i=0;i<o.length;i++){var n=o[i].getAttribute("cx"),s=o[i].getAttribute("cy"),a=o[i].classList.contains("white")?"white":"black";if(n==e&&s==t&&"white"===a){r="white";break e}if(n==e&&s==t&&"black"===a){r="black";break e}}return r}function validCoord(e,t){return 0<=e&&e<=8*size&&0<=t&&t<=8*size}function searchSimilarDelete(e,t,r){var o=!1;return r.forEach(function(r){if(r.cx==e&&r.cy==t)return o=!0}),o}function addClassDelete(e,t){var r=document.querySelectorAll("circle");[].concat(_toConsumableArray(r)).forEach(function(r){var o=r.getAttribute("cx"),i=r.getAttribute("cy");o==e&&i==t&&r.classList.add("delete")})}function specialCheckRemove(e,t,r){for(var o=void 0,i=0;i<e.length&&!(o=Math.abs(e[i].cx-t)==size&&Math.abs(e[i].cy-r)==size);i++);return o}function specialSortRemove(e,t,r,o){sortCoords(e,t,0,0,0);var i=JSON.parse(JSON.stringify(element.coordsMove));e:for(var n=0;n<i.length;n++)for(var s=i[n],a=0;a<s.length;a++){if(s[a].cx-r==size&&s[a].cy-o==size){var l=s.slice(0,a-1);e=[],t=[];for(var c=0;c<l.length;c++)"move"==l[c].flag?t.push(l[c]):"delete"==l[c].flag&&e.push(l[c]);break e}}return[e,t]}function sortCoords(e,t,r,o,i,n,s,a){if(!(r<0||o<0||r+1>=t.length||o+1>e.length)){null==a&&(a=[]);var l=t[r].cx,c=t[r].cy,u=t[r+1].cx,h=t[r+1].cy,f=e[o].cx,d=e[o].cy,v=u-l>0?u-size:u+size,m=h-c>0?h-size:h+size,y=void 0,b=void 0;if(r>=1){var p=t[r-1].cx,C=t[r-1].cy;u-l>0?(v=u-size,y=l<=p):(v=u+size,y=l>=p),h-c>0?(m=h-size,b=c<=C):(m=h+size,b=c>=C)}var _=Math.abs(l-u)==size&&Math.abs(c-h)==size,A=v==f&&m==d&&Math.abs(l-u)==Math.abs(c-h)&&(1!=y||1!=b);if(a.length>0&&1==n)var g="delete"==a[a.length-1-i].flag;if(g&&(element.coordsMove.push(a),e.splice(o-1,1),o-=1,a=[],n=!1,i=0),A){if(0==a.length)for(var w=0;w<r;w++){var z=t[w];a.push(z),o>w&&(z=e[w],a.push(z))}if(e.length==o+1){if(n&&i&&!g){var k=a.length-i-1;a.splice(k,i+1)}z=t.slice(r,r+1);if(a.push(z[0]),z=e.slice(o,o+1),a.push(z[0]),t.length-1>r)for(w=r+1;w<t.length;w++)a.push(t[w]);element.coordsMove.push(a)}else{if(n&&i&&!g){k=a.length-i-1;a.splice(k,i+1)}z=t.slice(r,r+1);a.push(z[0]),z=e.slice(o,o+1),a.push(z[0]),sortCoords(e,t,r+1,o+1,0,!1,!1,a)}}else if(_){z=t.slice(r,r+1);a.push(z[0]),sortCoords(e,t,r+1,o,i,!0,!1,a)}else if(!A){if(1==n){if(0==i){z=t.slice(r,r+1);a.push(z[0])}t.splice(r,1),sortCoords(e,t,r-1,o,i+1,!0,!1,a)}else if(a.length>0){z=t.slice(r,r+1);a.push(z[0]),element.coordsMove.push(a)}0==n&&0==s?(t.splice(r,1),e.splice(o-1,1),sortCoords(e,t,r-1,o-1,0,!1,!0,a=[])):(t.splice(r,1),sortCoords(e,t,r-1,o,0,!1,!0,a=[]))}}}
//# sourceMappingURL=data:application/json;base64,
