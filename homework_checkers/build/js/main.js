"use strict";var _createClass=function(){function e(e,t){for(var r=0;r<t.length;r++){var i=t[r];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,r,i){return r&&e(t.prototype,r),i&&e(t,i),t}}();function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var Create=function(){function e(t,r,i,s,o,l,n,c,a){_classCallCheck(this,e),this.tag=t,this.parent=r,this.size=size,this.fill=n,this.x=o||0,this.y=l||0,this.stroke=a||"#85653E",this.strokeWidth=c,this.elem,this.height=s,this.width=i}return _createClass(e,[{key:"create",value:function(){this.elem=document.createElementNS("http://www.w3.org/2000/svg",this.tag),this.parent.appendChild(this.elem)}},{key:"setAttributesSvg",value:function(e){return this.create(),this.elem.setAttribute("height",this.height),this.elem.setAttribute("width",this.width),this.elem.setAttribute("x",this.x),this.elem.setAttribute("y",this.y),this.elem.classList.add(e),this.elem}},{key:"setAttributesRect",value:function(e){return this.create(),this.elem.setAttribute("height",this.height),this.elem.setAttribute("width",this.width),this.elem.setAttribute("fill",this.fill),this.elem.setAttribute("x",this.x),this.elem.setAttribute("y",this.y),this.elem.setAttribute("stroke",this.stroke),this.elem.setAttribute("stroke-width",this.strokeWidth),this.elem.classList.add(e),this.elem}},{key:"setAttributesCircle",value:function(e,t,r){return this.create(),this.elem.setAttribute("xmlns","http://www.w3.org/2000/svg"),this.elem.setAttribute("cx",this.x),this.elem.setAttribute("cy",this.y),this.elem.setAttribute("r",t),this.elem.setAttribute("fill",this.fill),this.elem.setAttribute("stroke",this.stroke),this.elem.setAttribute("stroke-width",this.strokeWidth),this.elem.classList.add(e,"slowMove"),this.elem.addEventListener("click",clickCircle,!1),this.elem}},{key:"setAttributesVerySmallCircle",value:function(e){return this.create(),this.elem.setAttribute("cx",this.x),this.elem.setAttribute("cy",this.y),this.elem.setAttribute("r",size/7),this.elem.setAttribute("fill",this.fill),this.elem.setAttribute("stroke",this.stroke),this.elem.setAttribute("stroke-width",this.strokeWidth),this.elem.classList.add("VerySmallCircle"),this.elem}},{key:"setAttributesPolyline",value:function(e,t,r){return this.create(),this.elem.setAttribute("points",e),this.elem.setAttribute("stroke",t),this.elem.setAttribute("stroke-width","3"),this.elem.setAttribute("fill","none"),this.elem.classList.add(r),this.elem}},{key:"setAttributesG",value:function(e){return this.create(),this.elem.classList.add(e),this.elem}},{key:"setAttributesText",value:function(e,t,r){return this.create(),this.elem.setAttribute("x",this.x),this.elem.setAttribute("y",this.y),this.elem.setAttribute("font-family","Verdana"),this.elem.setAttribute("font-size","14"),this.elem.setAttribute("fill","#B04632"),this.elem.innerHTML=e,this.elem.classList.add(t),this.elem}}]),e}(),wrapper=document.querySelector("#wrapper"),size=Math.floor(.8*document.documentElement.clientHeight/8);size%2?size++:size=size;var container=new Create("svg",wrapper,11*size,9*size).setAttributesSvg("container"),outerBoard=new Create("svg",container,9*size,9*size,size,0).setAttributesSvg("outerBoard"),strokeOuter=new Create("rect",outerBoard,9*size,9*size,0,0,"#EDCFA9",5).setAttributesRect("strokeOuter"),middleBoard=new Create("svg",outerBoard,8.1*size,8.1*size,size/2-2,size/2-2).setAttributesSvg("middleBoard"),strokeMid=new Create("rect",middleBoard,8.1*size,8.1*size,0,0,"#85653E",5).setAttributesRect("strokeMid"),innerBoard=new Create("svg",container,9.5*size,8*size,1.5*size+1,.5*size+1).setAttributesSvg("innerBoard");createRect(),createCircle();var polylineParent=new Create("g",innerBoard).setAttributesG("polylineParent"),verySmallCircleParent=new Create("g",innerBoard).setAttributesG("verySmallCircleParent"),arrowMovePoints="1,1 "+.7*size+",1 "+.85*size+","+.3*size+" "+.7*size+","+.6*size+" 1,"+.6*size+" 1,1",arrowMoveParent=new Create("svg",container,size,size/1.5,0,0).setAttributesSvg("displayNone"),arrowMove=new Create("polyline",arrowMoveParent).setAttributesPolyline(arrowMovePoints,"#B04632","arrowMove"),text1=new Create("text",arrowMoveParent,null,null,5,size/4).setAttributesText("","text1"),text2=new Create("text",arrowMoveParent,null,null,5,size/2).setAttributesText("move","text2");function createRect(){for(var e=0,t=0,r=0;r<8;r++){for(var i=0;i<8;i++){new Create("rect",innerBoard,size,size,e,t,(r+i)%2?"#85653E":"#EDCFA9",0,null).setAttributesRect("rectBoard");e+=size}e=0,t+=size}}function createCircle(){for(var e=1.5*size,t=size/2,r="#565455",i="#3C3B3B",s="black",o=0;o<6;o++){for(var l=0;l<4;l++){new Create("circle",innerBoard,null,null,e,t,r,2,i).setAttributesCircle(s,size/3),new Create("circle",innerBoard,null,null,e,t,r,2,i).setAttributesCircle(s,size/5);e+=2*size}2==o?(t=5.5*size,e=size/2,r="#D4E2CB",i="#F8FFEE",s="white"):o%2?(t+=size,e=1.5*size):(t+=size,e=size/2)}}function _toConsumableArray(e){if(Array.isArray(e)){for(var t=0,r=Array(e.length);t<e.length;t++)r[t]=e[t];return r}return Array.from(e)}var element={};function clickCircle(e){this.classList.contains("lastMoved")||(verySmallCircleParent.children.length&&removeVerySmallCircle(),element.elem=this,element.parent=this.parentNode,element.cx=this.getAttribute("cx"),element.cy=this.getAttribute("cy"),element.color=this.classList.contains("white")?"white":"black",element.queen=!!this.classList.contains("queen"),removeHigherZindex(),removeClassActive(),removeActiveRect(),removePolylines(),removeClassDelete(),addClassActive(),moveArrow(element.color),searchMove())}function clickRect(e){var t=this.getAttribute("x"),r=this.getAttribute("y"),i=+t+size/2,s=+r+size/2;getMoved(setFinalRoute(i,s),i,s)}function setFinalRoute(e,t){var r=element.coordsMove.filter(function(r){for(var i=r.length-1;i>=0;i--)if(r[i].cx==e&&r[i].cy==t)return r});return(r=r[0]).splice(0,1),r}function getMoved(e,t,r){var i=0,s=document.querySelectorAll(".active");!function o(){if("move"===e[i].flag||"simpleMove"==e[i].flag){[].concat(_toConsumableArray(s)).forEach(function(t){t.setAttribute("cx",e[i].cx),t.setAttribute("cy",e[i].cy)});var l=e[i].cy==size/2&&"white"===element.color||e[i].cy==7.5*size&&"black"===element.color;l&&createQueen()}else if("delete"===e[i].flag){var n=[].concat(_toConsumableArray(document.querySelectorAll(".delete"))),c="white"==element.color?"black":"white",a=24-document.querySelectorAll("."+c).length;a%2&&--a;var u=void 0;u="black"===c?7.5*size-size/5*a/2:size/2+size/5*a/2,n.forEach(function(t){var r=t.getAttribute("cx"),s=t.getAttribute("cy");if(e[i].cx==r&&e[i].cy==s){t.classList.remove(""+c),setTimeout(function(){var e;(e=t.cloneNode(!0)).classList.add("cloneDelete"+c),innerBoard.appendChild(e)},800),setTimeout(function(){t.setAttribute("cx",9*size),t.setAttribute("cy",u)},500)}})}var h=e[i].cx==t&&e[i].cy==r;if(++i<e.length&&!h)setTimeout(function(){o()},180);else{setTimeout(function(){removeHigherZindex()},500),removeClassActive(),removeActiveRect(),removePolylines(),removeVerySmallCircle(),removeClassDelete(),classLastMoved();var d="white"==element.color?"black":"white";moveArrow(d)}}()}function removeActiveRect(){var e=document.querySelectorAll(".activeRect");[].concat(_toConsumableArray(e)).forEach(function(e){e.parentNode.removeChild(e)})}function removePolylines(){var e=document.querySelector(".polylineParent");[].concat(_toConsumableArray(e.children)).forEach(function(t){e.removeChild(t)})}function removeVerySmallCircle(){var e=document.querySelector(".verySmallCircleParent");[].concat(_toConsumableArray(e.children)).forEach(function(t){e.removeChild(t)})}function removeClassDelete(){var e=document.querySelectorAll(".delete");[].concat(_toConsumableArray(e)).forEach(function(e){e.classList.remove("delete")})}function classLastMoved(){var e=document.querySelectorAll(".lastMoved");e.length&&[].concat(_toConsumableArray(e)).forEach(function(e){e.classList.remove("lastMoved")});var t=document.getElementsByClassName(element.color);[].concat(_toConsumableArray(t)).forEach(function(e){e.classList.add("lastMoved")})}function createQueen(e){var t=document.querySelectorAll(".active");[].concat(_toConsumableArray(t)).forEach(function(e){+e.getAttribute("r")==size/5?e.parentNode.removeChild(e):e.classList.add("queen")})}function addClassActive(){var e=document.getElementsByClassName(element.color);[].concat(_toConsumableArray(e)).forEach(function(e){var t=e.getAttribute("cx"),r=e.getAttribute("cy");t==element.cx&&r==element.cy&&e.classList.add("active")})}function removeClassActive(){var e=document.querySelectorAll(".active");[].concat(_toConsumableArray(e)).forEach(function(e){e.classList.remove("active")})}function addHigherZindex(){var e=document.querySelector(".innerBoard"),t=document.querySelectorAll(".active");[].concat(_toConsumableArray(t)).forEach(function(t){var r=t.cloneNode(!0);console.log("==============="),console.log("clone"),console.log(r),r.classList.add("clone"),e.appendChild(r)}),console.log(document.querySelectorAll(".clone"))}function removeHigherZindex(){var e=document.querySelector(".innerBoard"),t=document.querySelectorAll(".clone");[].concat(_toConsumableArray(t)).forEach(function(t){e.removeChild(t)})}function moveArrow(e){"white"==e?arrowMoveParent.setAttribute("y",""+6.2*size):arrowMoveParent.setAttribute("y",""+2.2*size),arrowMoveParent.classList.remove("displayNone"),arrowMoveParent.classList.add("displayBlock"),text1.innerHTML=e,text1.setAttribute("fill",""+e),text2.setAttribute("fill",""+e)}var _slicedToArray=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var r=[],i=!0,s=!1,o=void 0;try{for(var l,n=e[Symbol.iterator]();!(i=(l=n.next()).done)&&(r.push(l.value),!t||r.length!==t);i=!0);}catch(e){s=!0,o=e}finally{try{!i&&n.return&&n.return()}finally{if(s)throw o}}return r}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")};function searchMove(){var e=[],t=element,r=t.cx,i=t.cy,s=t.color,o=t.queen;element.coordsMove=[],["topLeft","topRigth","lowLeft","lowRigth"].forEach(function(t){var l=findCoords(r,i,s,t,o),n=_slicedToArray(l,3),c=n[0],a=n[1],u=n[2];a.length?sortCoords(a,c,0,0,0):u.length&&e.push(u)}),element.coordsMove.length?element.coordsMove.forEach(function(e){var t=element.elem.getAttribute("stroke"),r=[];e.forEach(function(e){if(r.push(e.cx+","+e.cy),"move"==e.flag)new Create("circle",verySmallCircleParent,null,null,e.cx,e.cy,t,1,t).setAttributesVerySmallCircle("verySmallCircle")});for(var i=r.join(" "),s=(new Create("polyline",polylineParent).setAttributesPolyline(i,t,"polyline"),e.length-1);s>0&&"delete"!==e[s].flag;s--){var o=e[s].cx-size/2,l=e[s].cy-size/2;new Create("rect",innerBoard,size,size,o,l,"#B04632",3,t).setAttributesRect("activeRect").addEventListener("click",clickRect,!1)}}):e.length&&e.forEach(function(e){var t=element.elem.getAttribute("stroke"),r=[];element.coordsMove.push(e),e.forEach(function(e){if(r.push(e.cx+","+e.cy),"simpleMove"===e.flag){var i=e.cx-size/2,s=e.cy-size/2;new Create("rect",innerBoard,size,size,i,s,"#B04632",3,t).setAttributesRect("activeRect").addEventListener("click",clickRect,!1)}});var i=r.join(" ");new Create("polyline",polylineParent).setAttributesPolyline(i,t,"polyline");console.log(document.querySelectorAll(".clone"))}),console.log(document.querySelectorAll(".clone")),addHigherZindex(),console.log(document.querySelectorAll(".clone"))}_slicedToArray=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var r=[],i=!0,s=!1,o=void 0;try{for(var l,n=e[Symbol.iterator]();!(i=(l=n.next()).done)&&(r.push(l.value),!t||r.length!==t);i=!0);}catch(e){s=!0,o=e}finally{try{!i&&n.return&&n.return()}finally{if(s)throw o}}return r}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")};function _toConsumableArray(e){if(Array.isArray(e)){for(var t=0,r=Array(e.length);t<e.length;t++)r[t]=e[t];return r}return Array.from(e)}function findCoords(e,t,r,i,s,o,l,n,c){null==l&&(o=[],n=[],pushCoordsInArr(+e,+t,"move",l=[]));var a=setCoords(e,t,i),u=_slicedToArray(a,5),h=u[0],d=u[1],f=u[2],m=u[3],v=u[4],y=findNextElem(h,d);if("free"==y&&(s||r==v)&&null==c)n.length||pushCoordsInArr(+e,+t,"startMove",n),pushCoordsInArr(h,d,"simpleMove",n),s&&findCoords(h,d,r,i,s,o,l,n,c);else if("black"==y&&"white"==r||"white"==y&&"black"==r){var A=setCoords(h,d,i),b=_slicedToArray(A,2),C=findNextElem(b[0],b[1]),g=searchSimilarDelete(h,d,o);"free"!=C||g||(pushCoordsInArr(h,d,"delete",o),addClassDelete(h,d),findCoords(h,d,r,i,s,o,l,n,c=!0))}else if("free"==y&&null!=c){pushCoordsInArr(h,d,"move",l);var z=setCoords(h,d,i),w=_slicedToArray(z,2),p=findNextElem(w[0],w[1]);d!=size/2&&d!=7.5*size||(s=!0),("free"!=p||s)&&findCoords(h,d,r,i,s,o,l,n,c),findCoords(h,d,r,f,s,o,l,n),findCoords(h,d,r,m,s,o,l,n)}return[l,o,n]}function setCoords(e,t,r){var i=void 0,s=void 0,o=void 0;return"topLeft"===r?(e=Math.floor(+e-size),t=Math.floor(+t-size),i="topRigth",s="lowLeft",o="white"):"topRigth"===r?(e=Math.floor(+e+size),t=Math.floor(+t-size),i="topLeft",s="lowRigth",o="white"):"lowLeft"===r?(e=Math.floor(+e-size),t=Math.floor(+t+size),i="topLeft",s="lowRigth",o="black"):"lowRigth"===r&&(e=Math.floor(+e+size),t=Math.floor(+t+size),i="topRigth",s="lowLeft",o="black"),[e,t,i,s,o]}function pushCoordsInArr(e,t,r,i){var s={cx:e,cy:t,flag:r};return i.push(s),i}function findNextElem(e,t){if(!validCoord(e,t))return!1;var r="free",i=[].concat(_toConsumableArray(document.querySelectorAll("circle")));e:for(var s=0;s<i.length;s++){var o=i[s].getAttribute("cx"),l=i[s].getAttribute("cy"),n=i[s].classList.contains("white")?"white":"black";if(o==e&&l==t&&"white"===n){r="white";break e}if(o==e&&l==t&&"black"===n){r="black";break e}}return r}function validCoord(e,t){return 0<=e&&e<=8*size&&0<=t&&t<=8*size}function searchSimilarDelete(e,t,r){var i=!1;return r.forEach(function(r){if(r.cx==e&&r.cy==t)return i=!0}),i}function addClassDelete(e,t){var r=document.querySelectorAll("circle");[].concat(_toConsumableArray(r)).forEach(function(r){var i=r.getAttribute("cx"),s=r.getAttribute("cy");i==e&&s==t&&r.classList.add("delete")})}function sortCoords(e,t,r,i,s,o,l,n){if(!(r<0||i<0||r+1>=t.length||i+1>e.length)){null==n&&(n=[]);var c=t[r].cx,a=t[r].cy,u=t[r+1].cx,h=t[r+1].cy,d=e[i].cx,f=e[i].cy,m=u-c>0?u-size:u+size,v=h-a>0?h-size:h+size,y=void 0,A=void 0;if(r>=1){var b=t[r-1].cx,C=t[r-1].cy;u-c>0?(m=u-size,y=c<=b):(m=u+size,y=c>=b),h-a>0?(v=h-size,A=a<=C):(v=h+size,A=a>=C)}var g=Math.abs(c-u)==size&&Math.abs(a-h)==size,z=m==d&&v==f&&Math.abs(c-u)==Math.abs(a-h)&&(1!=y||1!=A);if(n.length>0&&1==o)var w="delete"==n[n.length-1-s].flag;if(w&&(element.coordsMove.push(n),e.splice(i-1,1),i-=1,n=[],o=!1,s=0),z){if(0==n.length)for(var p=0;p<r;p++){var x=t[p];n.push(x),i>p&&(x=e[p],n.push(x))}if(e.length==i+1){if(o&&s&&!w){var k=n.length-s-1;n.splice(k,s+1)}x=t.slice(r,r+1);if(n.push(x[0]),x=e.slice(i,i+1),n.push(x[0]),t.length-1>r)for(p=r+1;p<t.length;p++)n.push(t[p]);element.coordsMove.push(n)}else{if(o&&s&&!w){k=n.length-s-1;n.splice(k,s+1)}x=t.slice(r,r+1);n.push(x[0]),x=e.slice(i,i+1),n.push(x[0]),sortCoords(e,t,r+1,i+1,0,!1,!1,n)}}else if(g){x=t.slice(r,r+1);n.push(x[0]),sortCoords(e,t,r+1,i,s,!0,!1,n)}else if(!z){if(1==o){if(0==s){x=t.slice(r,r+1);n.push(x[0])}t.splice(r,1),sortCoords(e,t,r-1,i,s+1,!0,!1,n)}else if(n.length>0){x=t.slice(r,r+1);n.push(x[0]),element.coordsMove.push(n)}0==o&&0==l?(t.splice(r,1),e.splice(i-1,1),sortCoords(e,t,r-1,i-1,0,!1,!0,n=[])):(t.splice(r,1),sortCoords(e,t,r-1,i,0,!1,!0,n=[]))}}}
//# sourceMappingURL=data:application/json;base64,
