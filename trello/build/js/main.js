"use strict";window.onload=function(){var e={},t=new Image,a=document.createElement("div");a.style.display="none",document.body.appendChild(a);var n=function(a){a.target.parentNode.style.height=a.target.clientHeight-1+"px";var n=o(a.target),r=a.pageX-n.left,d=a.pageY-n.top;a.dataTransfer.dropEffect="move",a.dataTransfer.setData("text",a.target.id),a.dataTransfer.setDragImage(t,r,d),e.elem=a.target,e.elemChild=a.target.firstElementChild,e.parent=a.target.parentNode,e.style=a.target.getAttribute("style"),e.deltaX=r,e.deltaY=d,a.target.style.zIndex=9999,a.target.style.position="absolute",a.target.style.opacity="0"},r=function(e){},o=function(e){var t=e.getBoundingClientRect();return{top:t.top+pageYOffset,left:t.left+pageXOffset}},d=function(t){t.target.setAttribute("style",e.style)},l=function(e){"inBlock"!=e.target.className&&"outBlockTitle"!=e.target.className||screen(e.target)},s=function(e){console.log(e.target.parentNode.clientHeight),console.log(e.target.parentNode.clientWidth);var t=e.target.parentNode.cloneNode(!0);a.appendChild(t);var n=o(e.target),r=e.pageX-n.left,d=e.pageY-n.top;a.style.display="block",a.style.position="absolute",a.style.left="0",a.style.top="-1000px",a.style.zIndex="-100",a.style.opacity="1",e.dataTransfer.dropEffect="move",e.dataTransfer.setData("text",e.target.id),e.dataTransfer.setDragImage(t,r,d),e.target.parentNode.style.opacity="0"},i=function(e){console.log(e)},g=function(e){},c=function(t){a.style.left=t.pageX-e.deltaX+"px",a.style.top=t.pageY-e.deltaY+"px"},p=document.querySelectorAll(".inBlock"),u=(document.querySelectorAll(".outBlock"),document.querySelectorAll(".outBlockTitle"));p.forEach(function(e){e.setAttribute("draggable","true"),e.addEventListener("dragstart",n,!1),e.addEventListener("mouseover",l,!1),e.addEventListener("dragenter",r,!1),e.addEventListener("dragend",d,!1)}),u.forEach(function(e){e.setAttribute("draggable","true"),e.addEventListener("dragstart",s,!1),e.addEventListener("drag",c,!1),e.addEventListener("mouseover",l,!1),e.addEventListener("dragenter",i,!1),e.addEventListener("dragend",g,!1)}),window.screen=function(a){html2canvas(a,{onrendered:function(a){e.img=a,t.src=a.toDataURL("image/jpeg")}})}};
//# sourceMappingURL=data:application/json;base64,
